Org1 env 
================
##CLI##
CHANNEL_NAME=mychannel
CORE_PEER_ADDRESS=peer0.org1.example.com:7051
CORE_PEER_LOCALMSPID=Org1MSP
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
ORDERER_TLS_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem


Org2 env 
==========
##CLI##
CHANNEL_NAME=mychannel
CORE_PEER_ADDRESS=peer0.org2.example.com:7051
CORE_PEER_LOCALMSPID=Org2MSP
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
ORDERER_TLS_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

Org3 env 
=======
##CLI##
CHANNEL_NAME=mychannel
CORE_PEER_ADDRESS=peer0.org3.example.com:7051
CORE_PEER_LOCALMSPID=Org3MSP
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/server.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp
ORDERER_TLS_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

##HOST##
export PATH=~/Desktop/fabric-samples/bin:$PATH
export FABRIC_CFG_PATH=${PWD}
export CHANNEL_NAME=mychannel
export IMAGE_TAG=latest
export COMPOSE_PROJECT_NAME=fabric-from-scratch

##HOST##
cryptogen generate --config=./crypto-config.yaml

##HOST##
configtxgen -profile OrdererGenesis -channelID system-channel -outputBlock ./config/genesis.block

##HOST##
configtxgen -profile MyChannel -outputCreateChannelTx ./config/$CHANNEL_NAME.tx -channelID $CHANNEL_NAME

##HOST##
docker-compose -f docker-compose.yml up -d

##HOST##
ORDERER_TLS_CA=`docker exec cli  env | grep ORDERER_TLS_CA | cut -d'=' -f2`

##HOST##
echo $ORDERER_TLS_CA

##HOST##
docker exec cli peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f /opt/gopath/src/github.com/hyperledger/fabric/peer/config/$CHANNEL_NAME.tx --tls --cafile $ORDERER_TLS_CA

##HOST##
docker exec -it cli bash

*******************Set env variables in the CLI container**********************************
##CLI##
peer channel join -b $CHANNEL_NAME.block


#### repeat for all the peers###


############### Anchor update ############################################################################################################
##HOST##
configtxgen -profile MyChannel -outputAnchorPeersUpdate ./config/Org1MSPanchors.tx -channelID mychannel -asOrg Org1MSP
##HOST##
configtxgen -profile MyChannel -outputAnchorPeersUpdate ./config/Org2MSPanchors.tx -channelID mychannel -asOrg Org2MSP
##HOST##
configtxgen -profile MyChannel -outputAnchorPeersUpdate ./config/Org3MSPanchors.tx -channelID mychannel -asOrg Org3MSP

##CLI##
peer channel update -o orderer.example.com:7050 -c mychannel -f ./config/Org1MSPanchors.tx --tls --cafile $ORDERER_TLS_CA
##CLI##
peer channel update -o orderer.example.com:7050 -c mychannel -f ./config/Org2MSPanchors.tx --tls --cafile $ORDERER_TLS_CA
##CLI##
peer channel update -o orderer.example.com:7050 -c mychannel -f ./config/Org3MSPanchors.tx --tls --cafile $ORDERER_TLS_CA

################################################Repeat for all orgs###############################################################



##############################Package and install chaincode################################################################################

##HOST##
docker cp ./../../fabric-samples/chaincode/fabcar/javascript f54f528731ba:/opt/gopath/src/github.com/chaincode/
##CLI##
peer lifecycle chaincode package fabcar.tar.gz --path /opt/gopath/src/github.com/chaincode/javascript/ --lang node --label fabcar_1
##CLI##
peer lifecycle chaincode install fabcar.tar.gz 

*** copy the package ID ******

fabcar_1:ffd5d937737e1a852402eab332858cac525b79239142b1a9524f982d5d0eec9c

##############################################Repeat this step for all peers and organizations#############################

################################ Approveformyorg########################################
##CLI## #Org1#
peer lifecycle chaincode approveformyorg --channelID mychannel --name fabcar --version 1 --sequence 1 --package-id fabcar_1:ffd5d937737e1a852402eab332858cac525b79239142b1a9524f982d5d0eec9c  --tls --cafile $ORDERER_TLS_CA --waitForEvent
##CLI## #org2#
peer lifecycle chaincode approveformyorg --channelID mychannel --name fabcar --version 1 --sequence 1 --package-id fabcar_1:ffd5d937737e1a852402eab332858cac525b79239142b1a9524f982d5d0eec9c  --tls --cafile $ORDERER_TLS_CA --waitForEvent
##CLI## #Org3#
peer lifecycle chaincode approveformyorg --channelID mychannel --name fabcar --version 1 --sequence 1 --package-id fabcar_1:ffd5d937737e1a852402eab332858cac525b79239142b1a9524f982d5d0eec9c  --tls --cafile $ORDERER_TLS_CA --waitForEvent
#############################repeat for all orgs ##########################################################


################################ Commit on all orgs #####################################################

##CLI##
peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name fabcar --version 1 --sequence 1 --tls --cafile $ORDERER_TLS_CA --output json
##CLI##
peer lifecycle chaincode commit -o orderer.example.com:7050 --channelID mychannel --name fabcar --tls --cafile $ORDERER_TLS_CA --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --peerAddresses peer0.org3.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt --version 1 --sequence 1
##CLI##
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile $ORDERER_TLS_CA -C mychannel -n fabcar --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --peerAddresses peer0.org3.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt -c '{"function":"initLedger","Args":[]}'
##CLI##
peer chaincode query -o orderer.example.com:7050 --tls --cafile $ORDERER_TLS_CA -C mychannel -n fabcar --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt  -c '{"Args":["queryCar","CAR1"]}'
##CLI##
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile $ORDERER_TLS_CA -C mychannel -n fabcar --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --peerAddresses peer0.org3.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt -c '{"function":"createCar", "Args":["CAR5","Tata","Tiago","Black","Arun"]}'
##CLI##
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile $ORDERER_TLS_CA -C mychannel -n fabcar --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --peerAddresses peer0.org3.example.com:7051 --tlsRootCertFiles ${PWD}/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt -c '{"function":"initLedger","Args":[]}'

################################## RETURN TO HOST ########################################
##HOST##
docker-compose -f docker-compose-singlepeer.yml down

##HOST##
cd config/

##HOST##
rm -rf *

##HOST##
cd ..

##HOST##
cd crypto-config/

##HOST##
rm -rf *

##HOST##
cd ..
############################# END #################################################